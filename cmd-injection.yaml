rules:
  - id: tainted-system-command
    languages:
      - java
    severity: ERROR
    mode: taint
    pattern-sources:
    - patterns:
        - pattern-either:
            - pattern-inside: |
                $METHODNAME(..., @$REQ(...) $TYPE $SOURCE,...) {
                  ...
                }
            - pattern-inside: |
                $METHODNAME(..., @$REQ $TYPE $SOURCE,...) {
                  ...
                }
        - metavariable-regex:
            metavariable: $REQ
            regex: (RequestBody|PathVariable|RequestParam|RequestHeader|CookieValue|ModelAttribute)
        - pattern: $SOURCE
    pattern-sinks:
    - pattern: |
        (ProcessBuilder $PB).command(...);
    message: "\"Detected user input entering a method which executes a system
      command. This could result in a command injection vulnerability, which
      allows an attacker to inject an arbitrary system command onto the server.
      The attacker could download malware onto or steal data from the server.
      Instead, use ProcessBuilder, separating the command into individual
      arguments, like this: `new ProcessBuilder(\\\"ls\\\", \\\"-al\\\",
      targetDirectory)`. Further, make sure you hardcode or allowlist the actual
      command so that attackers can't run arbitrary commands.\""
    metadata:
      interfile: true

